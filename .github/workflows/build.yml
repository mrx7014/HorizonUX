name: HorizonUX Actions ROM Modifier

on:
  workflow_dispatch:
    inputs:
      target:
        description: 'Select build target'
        required: true
        default: 'r8q'
        type: choice
        options:
          - a30
          - r8q
      firmware_url:
        description: 'Enter Firmware URL'
        required: true
      makeconfig:
        description: 'Enter makeconfig url'
        required: true
      build_output_compression_type:
        description: 'Select build output compression type'
        required: true
        default: 'tar'
        type: choice
        options:
          - tar
          - zstd
          - zip
      private_key_setup_link:
        description: 'Enter the link to the private key setup script'
        required: false
      telegram_bot_token:
        description: 'Enter your Telegram bot token'
        required: true
      telegram_chat_id:
        description: 'Enter your Telegram chat ID'
        required: true
      cleanup_disk:
        description: 'Do you want to clean the disk before building?'
        required: false
        default: 'false'
        type: choice
        options:
          - true
          - false

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          submodules: 'recursive'

      - name: Free disk space (1/3)
        if: ${{ github.event.inputs.cleanup_disk == 'true' }}
        run: |
          sudo rm -rf /usr/share/dotnet /usr/local/lib/android /opt/ghc /opt/hostedtoolcache/CodeQL
          sudo docker image prune --all --force
          sudo docker builder prune -a

      - name: Free disk space (2/3)
        if: ${{ github.event.inputs.cleanup_disk == 'true' }}
        uses: jlumbroso/free-disk-space@main
        with:
          tool-cache: true

      - name: Free disk space (3/3)
        if: ${{ github.event.inputs.cleanup_disk == 'true' }}
        uses: rokibhasansagar/slimhub_actions@main
        with:
          retain: 'compiler_cmake'

      - name: Set up JDK 11
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '11'

      - name: Install Dependencies and Setup Environment
        run: |
          sudo apt install -y erofs-utils xmlstarlet python3 
          for i in system/product/priv-app system/product/etc system/product/overlay system/etc/permissions system/product/etc/permissions custom_recovery_with_fastbootd/ system/etc/init/ tmp/hux/ local_build_downloaded_contents/ local_build_downloaded_contents/extracted_fw local_build_downloaded_contents/tar_files/ workflow_partitions/ workflow_builds/ super_extract/; do
            mkdir -p "./local_build/$i"
          done
          touch ./local_build/logs/hux_build.log
  
      - name: Clone LonelyFool's lpunpack_and_lpmake Repository to fetch Android Development Tools
        run: |
          git clone --branch android11 --single-branch https://github.com/LonelyFool/lpunpack_and_lpmake/
          echo
          
      - name: Setup LonelyFool's Android Development Tools.
        run: |
          cd lpunpack_and_lpmake
          mkdir -p ./bin
          chmod +x ./make.sh
          echo -e "\n\nexit 0" >> ./make.sh
          ./make.sh &>../local_build/logs/hux_build.log || true
          for precompiledBinaries in bin/*; do
              mv $precompiledBinaries ./src/dependencies/bin/
          done
          
      - name: Download And Configure Firmware 
        run: |
          chmod +x ./workflow_builder/configureFirmware.sh
          ./workflow_builder/configureFirmware.sh \
          "${{ github.event.inputs.firmware_url }}" \
          "${{ github.event.inputs.makeconfig }}" \
          "${{ github.event.inputs.private_key_setup_link }}" \
          "${{ github.event.inputs.target }}" \
          "${{ github.event.inputs.telegram_bot_token }}" \
          "${{ github.event.inputs.telegram_chat_id }}"
              
      - name: Modify ROM
        run: |
          chmod +x ./src/build.sh
          ./src/build.sh \
          "${{ github.event.inputs.target }}"
        
      - name: Pack Firmware And Upload it to Telegram
        run: |
            chmod +x ./workflow_builder/packAndUpload.sh
            ./workflow_builder/packAndUpload.sh \
            "${{ github.event.inputs.build_output_compression_type }}"